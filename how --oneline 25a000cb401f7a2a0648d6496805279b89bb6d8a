[33m4d895a0[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m Comment out isUserLoggedIn middleware in api.route.ts to simplify API route testing and debugging.
[33m842bd4e[m Comment out isUserLoggedIn middleware in api.route.ts to temporarily disable authentication for API routes, allowing for easier testing and debugging.
[33m54565f3[m Refactor authentication middleware usage: remove isUserLoggedIn from app.ts and apply it to the API router in api.route.ts for improved route protection and code organization.
[33md7cf48f[m Implement cookie removal for unauthenticated users in getUser function, enhancing security by ensuring no session tokens are retained when a user is not logged in.
[33mb2f1b3a[m Refactor catch-all route in production setup to use a more descriptive parameter name, improving code clarity while serving the frontend index.html file.
[33m4c3f8ed[m Enhance production setup by adding a catch-all route to serve the frontend index.html file, ensuring proper handling of all requests in production environment.
[33m8f64e1c[m Add Content Security Policy to enhance security: implement img-src directives in helmet configuration to allow images from self, data, and blob sources, improving protection against XSS attacks.
[33md5b3d64[m Update package.json to specify Node.js engine requirement, ensuring compatibility with version 22.0.0 or higher.
[33mb7bd7a5[m Refactor package.json to simplify start script for backend and enhance app.ts to serve static frontend files in production. This improves deployment efficiency and resource management.
[33ma7a45c9[m Update package.json and package-lock.json to include cpx for file copying, enhance build scripts for backend, and adjust message component for user type consistency.
[33mfd8e684[m Update package.json scripts, refactor message.controller for cleaner error handling, and modify socket.ts to remove console logs. Adjust frontend components to reflect updated message sender types and fix asset path in index.html for improved resource management.
[33mcf1d6d6[m Refactor main.tsx to implement code-splitting for improved performance: utilize React's lazy loading and Suspense for HomePage, SignupPage, SigninPage, and ProfilePage components. Remove console logs from ContactsAvatar and authStore for cleaner code and better performance.
[33m25a000c[m Refactor ChatSection and Messages components to utilize selectedUser from chat store: enhance state management by adding selectedUser key to ChatSection and removing unused loading state in Messages. Update HomePage to reset selectedUser on unmount for improved user experience.
[33m2c95b25[m Add subscription management for new messages in chat component: implement logic to subscribe and unsubscribe from new message events in Messages component, enhancing real-time message updates for selected users.
[33m6bea704[m Update socket integration in backend: change server import in index.ts to utilize socket.js, and export server from socket.ts for improved modularity and clarity in socket management.
[33m6fca359[m Enhance message sending functionality with socket integration: add logic to send messages to online users via sockets in message.controller, update message route to handle image uploads, and refactor API routes for improved clarity. This improves real-time communication in the messaging system.
[33m384a260[m Refactor import paths in UI components for consistency: update import statements in ai-input, avatar, and textarea components to use relative paths instead of absolute paths. This improves code maintainability and clarity across the project.
[33m5ce06a0[m Implement online user filtering in ContactsContainer and update CheckOnlineSwitch for state management: refactor CheckOnlineSwitch to utilize chat store for toggling online user visibility, enhance ContactsContainer to filter displayed users based on online status, and adjust ContactsAvatar to correctly track user online status. This improves user experience by allowing users to view only online contacts.
[33ma89d0e3[m Refactor user online status management in frontend components: update ContactsAvatar to dynamically determine online status based on user ID, modify Contact and ChatHeader components to pass user ID, and enhance socket integration in authStore for real-time online user tracking. This improves user experience and consistency across the chat interface.
[33m7c22da1[m Enhance socket user tracking and connection management: update socket.ts to manage online users and emit their status on connection and disconnection. Modify authStore.ts to include user ID in socket connection queries and handle connection events, improving real-time user experience and socket reliability.
